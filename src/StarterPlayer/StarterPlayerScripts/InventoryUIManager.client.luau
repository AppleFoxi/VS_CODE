-- InventoryClientManager (StarterPlayerScripts)
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local remoteEvent = ReplicatedStorage:WaitForChild("InventoryEvent")
local screenGui = playerGui:WaitForChild("ScreenGui")
local background = screenGui:WaitForChild("Background")

local selectedItem = nil
local scrollFrame = nil
local contentFrame = nil
local itemCounts = {}

-- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è (–£–í–ï–õ–ò–ß–ï–ù–´ –í 2 –†–ê–ó–ê)
local SLOT_WIDTH = 160  -- –±—ã–ª–æ 80
local SLOT_HEIGHT = 200 -- –±—ã–ª–æ 100
local SLOT_SPACING_X = 20
local SLOT_SPACING_Y = 20
local SLOTS_PER_ROW = 2
local VISIBLE_ROWS = 2  -- —É–º–µ–Ω—å—à–µ–Ω–æ —á—Ç–æ–±—ã –≤–º–µ—â–∞–ª–∏—Å—å –±–æ–ª—å—à–∏–µ –∫–Ω–æ–ø–∫–∏

-- –°—Å—ã–ª–∫–∞ –Ω–∞ –º–æ–¥—É–ª—å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞
local BuildManager = nil
local success, message = pcall(function()
    BuildManager = require(ReplicatedStorage:WaitForChild("BuildManager"))
end)
if not success then
    warn("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å BuildManager: " .. tostring(message))
end

-- –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–æ–ª–ª-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
local function createScrollContainer()
    if scrollFrame then scrollFrame:Destroy() end
    
    scrollFrame = Instance.new("Frame")
    scrollFrame.Name = "ScrollContainer"
    scrollFrame.Size = UDim2.new(0, SLOTS_PER_ROW * SLOT_WIDTH + (SLOTS_PER_ROW + 1) * SLOT_SPACING_X, 
                                 0, VISIBLE_ROWS * SLOT_HEIGHT + (VISIBLE_ROWS + 1) * SLOT_SPACING_Y)
    scrollFrame.Position = UDim2.new(0, 10, 0, 10)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.ClipsDescendants = true
    
    local scrollingFrame = Instance.new("ScrollingFrame")
    scrollingFrame.Name = "ScrollingFrame"
    scrollingFrame.Size = UDim2.new(1, 0, 1, 0)
    scrollingFrame.Position = UDim2.new(0, 0, 0, 0)
    scrollingFrame.BackgroundTransparency = 1
    scrollingFrame.ScrollBarThickness = 12  -- —Ç–æ–ª—â–µ —Å–∫—Ä–æ–ª–ª–±–∞—Ä
    scrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 120)
    scrollingFrame.VerticalScrollBarInset = Enum.ScrollBarInset.Always
    scrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    
    contentFrame = Instance.new("Frame")
    contentFrame.Name = "Content"
    contentFrame.Size = UDim2.new(1, 0, 0, 0)
    contentFrame.Position = UDim2.new(0, 0, 0, 0)
    contentFrame.BackgroundTransparency = 1
    
    scrollingFrame.Parent = scrollFrame
    contentFrame.Parent = scrollingFrame
    scrollFrame.Parent = background
    
    return scrollingFrame
end

-- –°–æ–∑–¥–∞–Ω–∏–µ —è—á–µ–π–∫–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è (–£–í–ï–õ–ò–ß–ï–ù–ù–´–ï –†–ê–ó–ú–ï–†–´)
local function createItemSlot(itemName, itemCount, maxCount, position)
    -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if not itemName or not itemCount or not maxCount then
        warn("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ—Ç–∞: " .. tostring(itemName))
        return nil, nil, nil
    end
    
    local template = Instance.new("Frame")
    template.Name = tostring(itemName) .. "Slot"
    template.Size = UDim2.new(0, SLOT_WIDTH, 0, SLOT_HEIGHT)
    template.Position = position
    template.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
    template.BorderSizePixel = 3  -- —Ç–æ–ª—â–µ –≥—Ä–∞–Ω–∏—Ü–∞
    template.BorderColor3 = Color3.fromRGB(100, 100, 120)
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
    itemCounts[itemName] = {current = itemCount, max = maxCount}
    
    -- –î–æ–±–∞–≤–ª—è–µ–º TextButton –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–æ–≤
    local clickDetector = Instance.new("TextButton")
    clickDetector.Name = "ClickDetector"
    clickDetector.Size = UDim2.new(1, 0, 1, 0)
    clickDetector.BackgroundTransparency = 1
    clickDetector.BorderSizePixel = 0
    clickDetector.Text = ""
    clickDetector.ZIndex = 10
    clickDetector.Parent = template
    
    -- –ò–∫–æ–Ω–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ (–£–í–ï–õ–ò–ß–ï–ù–ê)
    local icon = Instance.new("ImageLabel")
    icon.Name = "Icon"
    icon.Size = UDim2.new(0, 120, 0, 120)  -- –±—ã–ª–æ 60x60
    icon.Position = UDim2.new(0.5, 0, 0.1, 0)
    icon.AnchorPoint = Vector2.new(0.5, 0)
    icon.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
    icon.Image = "rbxassetid://12345678"
    
    -- –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ (–£–í–ï–õ–ò–ß–ï–ù–û, –ñ–ò–†–ù–´–ô –®–†–ò–§–¢)
    local nameText = Instance.new("TextLabel")
    nameText.Name = "NameText"
    nameText.Size = UDim2.new(0, 140, 0, 30)  -- –±—ã–ª–æ 70x15
    nameText.Position = UDim2.new(0.5, 0, 0.6, 0)
    nameText.AnchorPoint = Vector2.new(0.5, 0)
    nameText.Text = tostring(itemName)
    nameText.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameText.TextScaled = true
    nameText.BackgroundTransparency = 1
    nameText.Font = Enum.Font.GothamBlack  -- –û–ß–ï–ù–¨ –ñ–ò–†–ù–´–ô –®–†–ò–§–¢
    nameText.TextStrokeTransparency = 0.8  -- –æ–±–≤–æ–¥–∫–∞ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
    nameText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    
    -- –°—á–µ—Ç—á–∏–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (–£–í–ï–õ–ò–ß–ï–ù–û, –ñ–ò—Ä–ù–´–ô –®–†–ò–§–¢)
    local countText = Instance.new("TextLabel")
    countText.Name = "CountText"
    countText.Size = UDim2.new(0, 140, 0, 30)  -- –±—ã–ª–æ 70x15
    countText.Position = UDim2.new(0.5, 0, 0.8, 0)
    countText.AnchorPoint = Vector2.new(0.5, 0)
    countText.Text = tostring(itemCount) .. "/" .. tostring(maxCount)
    countText.TextColor3 = Color3.fromRGB(200, 200, 200)
    countText.TextScaled = true
    countText.BackgroundTransparency = 1
    countText.Font = Enum.Font.GothamBold  -- –ñ–ò–†–ù–´–ô –®–†–ò–§–¢
    countText.TextStrokeTransparency = 0.8
    countText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    
    -- –≠—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ (–£–í–ï–õ–ò–ß–ï–ù)
    local hoverEffect = Instance.new("Frame")
    hoverEffect.Name = "HoverEffect"
    hoverEffect.Size = UDim2.new(1, 0, 1, 0)
    hoverEffect.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    hoverEffect.BackgroundTransparency = 0.9
    hoverEffect.Visible = false
    hoverEffect.ZIndex = 5
    
    -- –°–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = template
    
    local iconCorner = Instance.new("UICorner")
    iconCorner.CornerRadius = UDim.new(0, 8)
    iconCorner.Parent = icon
    
    icon.Parent = template
    nameText.Parent = template
    countText.Parent = template
    hoverEffect.Parent = template
    
    return template, clickDetector, countText
end

-- –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
local function highlightSelectedItem(selectedName)
    if not selectedName then
        selectedName = ""
    end
    
    for _, child in ipairs(contentFrame:GetChildren()) do
        if child:IsA("Frame") and child.Name:find("Slot") then
            if child.Name == selectedName .. "Slot" then
                -- –Ø—Ä–∫–∞—è –æ–±–≤–æ–¥–∫–∞ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
                child.BorderColor3 = Color3.fromRGB(0, 255, 0)
                child.BorderSizePixel = 4  -- —Ç–æ–ª—â–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ
                child.BackgroundColor3 = Color3.fromRGB(80, 100, 80)
            else
                child.BorderColor3 = Color3.fromRGB(100, 100, 120)
                child.BorderSizePixel = 3
                child.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
            end
        end
    end
end

-- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø)
local function updateItemCount(itemName, newCount)
    if not itemName or not itemCounts[itemName] then
        warn("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—á–µ—Ç—á–∏–∫: –Ω–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø—Ä–µ–¥–º–µ—Ç–∞ - " .. tostring(itemName))
        return
    end
    
    itemCounts[itemName].current = newCount
    
    local slot = contentFrame:FindFirstChild(tostring(itemName) .. "Slot")
    if slot then
        local countText = slot:FindFirstChild("CountText")
        if countText then
            local maxCount = itemCounts[itemName].max or 0
            countText.Text = tostring(newCount) .. "/" .. tostring(maxCount)
            
            -- –ú–µ–Ω—è–µ–º —Ü–≤–µ—Ç –µ—Å–ª–∏ –ø—Ä–µ–¥–º–µ—Ç –∑–∞–∫–æ–Ω—á–∏–ª—Å—è
            if newCount <= 0 then
                countText.TextColor3 = Color3.fromRGB(255, 100, 100)
            else
                countText.TextColor3 = Color3.fromRGB(200, 200, 200)
            end
        end
    end
end

-- –ó–∞–ø—Ä–æ—Å –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
local function selectItem(itemName)
    if not itemName or not itemCounts[itemName] or itemCounts[itemName].current <= 0 then
        print("‚ùå –ù–µ–ª—å–∑—è –≤—ã–±—Ä–∞—Ç—å: " .. tostring(itemName) .. " (–∑–∞–∫–æ–Ω—á–∏–ª—Å—è –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)")
        return
    end
    
    print("üéØ –í—ã–±—Ä–∞–Ω –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞:", itemName)
    selectedItem = itemName
    highlightSelectedItem(itemName)
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–∂–∏–º —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞
    if BuildManager then
        BuildManager.StartBuildingMode(itemName)
    end
    
    remoteEvent:FireServer("selectItem", itemName)
end

-- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö)
remoteEvent.OnClientEvent:Connect(function(action, itemName, count, maxCount)
    if action == "itemSelected" then
        if itemName and count and maxCount then
            selectedItem = itemName
            highlightSelectedItem(itemName)
            print("‚úÖ –ü—Ä–µ–¥–º–µ—Ç –≤—ã–±—Ä–∞–Ω:", itemName, "–û—Å—Ç–∞–ª–æ—Å—å:", count .. "/" .. maxCount)
        else
            warn("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è itemSelected")
        end
    elseif action == "itemUsed" then
        -- –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –≤ UI
        if itemName and count then
            updateItemCount(itemName, count)
            print("üì¶ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ø—Ä–µ–¥–º–µ—Ç:", itemName, "–û—Å—Ç–∞–ª–æ—Å—å:", count)
        else
            warn("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è itemUsed")
        end
    elseif action == "error" then
        print("‚ùå –û—à–∏–±–∫–∞:", tostring(itemName))
    elseif action == "initInventory" then
        -- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –¥–∞–Ω–Ω—ã–º–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
        if itemName and type(itemName) == "table" then
            for item, count in pairs(itemName) do
                if itemCounts[item] then
                    updateItemCount(item, count)
                end
            end
        else
            warn("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è initInventory")
        end
    end
end)

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
local function initInventory()
    local scrollingFrame = createScrollContainer()
    
    -- –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    local playerData = {
        {"Stone", 10, 50},
        {"Wood", 25, 100},
        {"Glass", 5, 20},
        {"Metal", 2, 10},
        {"Brick", 15, 30},
        {"Gold", 1, 5}
    }
    
    for i, data in ipairs(playerData) do
        local itemName, itemCount, maxCount = data[1], data[2], data[3]
        
        -- –í—ã—á–∏—Å–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å–ª–æ—Ç–∞
        local row = math.floor((i - 1) / SLOTS_PER_ROW)
        local col = (i - 1) % SLOTS_PER_ROW
        
        local xPos = SLOT_SPACING_X + col * (SLOT_WIDTH + SLOT_SPACING_X)
        local yPos = SLOT_SPACING_Y + row * (SLOT_HEIGHT + SLOT_SPACING_Y)
        
        local position = UDim2.new(0, xPos, 0, yPos)
        
        local slot, clickDetector, countText = createItemSlot(itemName, itemCount, maxCount, position)
        if slot then
            slot.Parent = contentFrame
            
            -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
            clickDetector.MouseButton1Click:Connect(function()
                selectItem(itemName)
            end)
            
            -- –≠—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            clickDetector.MouseEnter:Connect(function()
                local hoverEffect = slot:FindFirstChild("HoverEffect")
                if hoverEffect then
                    hoverEffect.Visible = true
                end
            end)
            
            clickDetector.MouseLeave:Connect(function()
                local hoverEffect = slot:FindFirstChild("HoverEffect")
                if hoverEffect then
                    hoverEffect.Visible = false
                end
            end)
        end
    end
    
    -- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    local totalRows = math.ceil(#playerData / SLOTS_PER_ROW)
    contentFrame.Size = UDim2.new(
        1, 0,
        0, totalRows * SLOT_HEIGHT + (totalRows + 1) * SLOT_SPACING_Y
    )
    
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, contentFrame.Size.Y.Offset)
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–º–µ–Ω—ã —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞
local function cancelBuilding()
    if selectedItem then
        selectedItem = nil
        highlightSelectedItem("")
        if BuildManager then
            BuildManager.StopBuildingMode()
        end
        print("üö´ –†–µ–∂–∏–º —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –æ—Ç–º–µ–Ω–µ–Ω")
    end
end

-- –û—Ç–º–µ–Ω–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –ø–æ –∫–ª–∞–≤–∏—à–µ ESC
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.Escape then
        cancelBuilding()
    end
end)

-- –ó–∞–ø—É—Å–∫
game:GetService("RunService").RenderStepped:Wait()
initInventory()
print("‚úÖ –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∑–∞–ø—É—â–µ–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞!")